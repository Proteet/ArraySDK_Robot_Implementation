<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArraySDK_Example</name>
    </assembly>
    <members>
        <member name="T:SDK_Example.FormMessage">
            <summary>
            Represents a message form. Displays message defined by MessageClass
            </summary>
        </member>
        <member name="F:SDK_Example.FormMessage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SDK_Example.FormMessage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SDK_Example.FormMessage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SDK_Example.formScan2D">
            <summary>
            represents the Main Form to display the US image.
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.bImgExt">
            <summary>
            TO BE DONE
            Image extension Should be adapted to the new array probe since it's very dark as is.
            </summary>
            UScanGuide
        </member>
        <member name="F:SDK_Example.formScan2D.bmpUSImage">
            <summary>
            bytRawImage will be passed by reference to the Dll to receive the US image
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.bytRawImageRef">
            <summary>
            pass by reference to the dll
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.bytRawImage">
            <summary>
            Current data
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.bytRawImagePrevious">
            <summary>
            to keep track of the previous data, to use it when needs
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.aushRawRF">
            <summary>
            RF Current Data
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.aptRFdata">
            <summary>
            RF Curve
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.abytRawCFM">
            <summary>
            CFM Current Data
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.aushRawCFM">
            <summary>
            CFM: RF raw data
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.iCineCounter">
            <summary>
            Cineloop
            </summary>
            
        </member>
        <member name="F:SDK_Example.formScan2D.MaxCine">
            current index of the loop
        </member>
        <member name="F:SDK_Example.formScan2D.bCineOn">
            Number of Images saved in the loop
        </member>
        <member name="F:SDK_Example.formScan2D.ByteArrayList">
            Play/Stop
        </member>
        <member name="F:SDK_Example.formScan2D.ushortArrayList">
            Container of the Cineloop
        </member>
        <member name="F:SDK_Example.formScan2D.ByteUniArrayList">
            Container of the cineloop for RF Data
        </member>
        <member name="F:SDK_Example.formScan2D.ushortUniArrayList">
            Container of the cineloop for CFM Data
        </member>
        <member name="F:SDK_Example.formScan2D.trdCineShow">
            Container of the cineloop for CFM Data (RF)
        </member>
        <member name="F:SDK_Example.formScan2D.stopWatch">
            Thread when play the cineloop
        </member>
        <member name="F:SDK_Example.formScan2D.strNotConnected">
            Timer for the FrameRate
            probes connected
        </member>
        <member name="F:SDK_Example.formScan2D.bmpLoad">
            intermediate Bitmap used to Save/Load to file
        </member>
        <member name="F:SDK_Example.formScan2D.shIdleId">
            Probe Id of the saved/loaded image 
        </member>
        <member name="F:SDK_Example.formScan2D.bIdle">
            Flag to indentify Idle mode
        </member>
        <member name="F:SDK_Example.formScan2D.iIdleWidth">
            "Idle" Scan Converter 
        </member>
        <member name="F:SDK_Example.formScan2D.iMaxDepthIndex">
            <summary>
             Define the array of Depths for each probe. Array is not mandatory. 
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.aiFreq">
            <summary>
            Define the array of Frequencies - mandatory
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.aiFocus">
            <summary>
            Define the array of Focus - mandatory
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.abytHighVoltage">
            <summary>
            Define the array of HighVoltage, values are a percentage of the highest voltage. Array is not mandatory.
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.DIG_GAIN_MIN">
            <summary>
             Software TGC 
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.iDynamicIndex">
            <summary>
            Dynamic and Anti-Log
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.comPort">
            <summary>
            this for communicating with SerialPort
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.astrSC">
            <summary>
            Define the choices of the sizes of the Scan Converter
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.bInitDone">
            <summary>
            Define the 2 classes for the ScanConverter: Scan2DClass and ScanConverter
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.MyHwControls">
            <summary>
            get an Instance of HWControls
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.ZoomBox">
            <summary>
            define the Class for the zoom. ZoomBoxClass is included in the ToolsLibrary
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.colBox">
            <summary>
             Color
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.formScan2D_Load(System.Object,System.EventArgs)">
            <summary>
            To load the main form
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:SDK_Example.formScan2D.Version">
            <summary>
            File Version
            </summary>
        </member>
        <member name="P:SDK_Example.formScan2D.ShortVersion">
            <summary>
            File Version
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.UpdateCineloopGroup(System.Boolean)">
            <summary>
            To enable or disable Cineloop buttons
            </summary>
            <param name="enable"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.UpdateButtons">
            <summary>
            to update buttons 
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.UpdateLabels">
            <summary>
            to update all the labels
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.ResetLabels">
            <summary>
            to reset all the labels, no value displayed, just the title
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.InitControlPlusMinus">
            <summary>
            To initialize the PlusMinus controls
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.formScan2D_FormClosed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            To close the main form 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.InitScan">
            <summary>
            To initialize a new scan, called when Scan Starts
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.RebuildScanConverter">
            <summary>
            To recalculate the ScanConverter when a parameter has changed, ex: Depth, Zoom
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.RebuildAll">
            <summary>
            idem RebuildScanConverter + SetFrequencyAndFocus 
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.buttonScan_Click(System.Object,System.EventArgs)">
            <summary>
            to Start/Stop the Acquisition and scan
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.StartScan">
            <summary>
            call to Start
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.StopScan">
            <summary>
            call to stop
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.StartThreadScan">
            <summary>
            Start the Acquisition and scan
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.StopThreadScan">
            <summary>
            to Stop the Acquisition and scan
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DepthPlus">
            <summary>
            To increase the Depth
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DepthMinus">
            <summary>
            To decrease the Depth
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.FreqPlus">
            <summary>
            To increase the frequency
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.HighPlus">
            <summary>
            To increase the High Voltage
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.HighMinus">
            <summary>
            To decrease the High Voltage
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.ImagPlus">
            <summary>
            To increase the High Voltage
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.ImageRefresh(IntersonArray.Imaging.Capture,System.EventArgs)">
            <summary>
            NewImageHandler
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.DoRefresh">
            <summary>
            to refresh uctrlscan, container of the US image
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DrawCurve(System.Int32,System.Int32,System.Int32)">
            <summary>
            to Draw the RF curve
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="factor"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.BuildRFData(System.UInt16[0:,0:],System.Int32)">
            <summary>
            to calculate the points of the curve, Display one line of the RF data
            </summary>
            <param name="aushBuild"></param>
            <param name="factor"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.BuildCFMData(System.UInt16[],System.Int32)">
            <summary>
            to calculate the points of the curve. Display one line of the CFM data (raw data then RF)
            </summary>
            <param name="aushBuild"></param>
            <param name="factor"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.MyMarshalToForm(SDK_Example.formScan2D.ControlEnum,System.String)">
            <summary>
             Enables accessing a form from another thread
            </summary>
            <param name="eCtrl">A enum that points to the control to perform the action</param>
            <param name="textToDisplay">Text that the form displays or uses for 
             another purpose. Actions that don't use text ignore this parameter.</param>
        </member>
        <member name="M:SDK_Example.formScan2D.AccessForm(SDK_Example.formScan2D.ControlEnum,System.String)">
            <summary>
            MarshalToForm
            </summary>
            <param name="eCtrl"></param>
            <param name="formText"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.uctrlGrayScale_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            To display GrayScale
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.formScan2D_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            paint
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ResetZoom">
            //////////
            To be used with ZoomBoxClass (ToolsLibrary.dll)
            //////////
            <summary>
            To reset the Zoom, back to ZOOM_MIN
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.buttonZoomBox_Click(System.Object,System.EventArgs)">
            <summary>
            Command to reset Zoom
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.MouseResizeBox(System.Int32,System.Int32)">
            <summary>
            Resize the Zoom Box according the mouse coordinates
            </summary>
            <param name="iX"></param>
            <param name="iY"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.uctrlScan_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Command to resize the zoom box
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.InitZoom(System.Int32,System.Int32)">
            <summary>
            To Display the Zoom Box
            </summary>
            <param name="iX"></param>
            <param name="iY"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.uctrlScan_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Command to display the zoom box
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ValidateZoomFactor">
            <summary>
            To Validate the ZoomFactor
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.SetZoom">
            <summary>
            set Zoom parameters
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.uctrlScan_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Command to validate the Zoom box and set Zoom parameters
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.AddToCine(System.Byte[0:,0:])">
            <summary>
            When scanning, to Add the last Raw data to the List( i.e. cineloop)
            </summary>
            <param name="arrayByte"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.AddToCineRF(System.UInt16[0:,0:])">
            <summary>
            When scanning, to Add the last Raw RF data to the List( i.e. cineloop)
            </summary>
            <param name="arrayUshort"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.AddToCineCFM(System.Byte[])">
            <summary>
            When scanning, to Add the last Raw CFM data to the List( i.e. cineloop)
            </summary>
            <param name="arrayByte"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.AddToCineCFM(System.UInt16[])">
            <summary>
            Ushort version
            </summary>
            <param name="arrayUshort"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.buttonCine_Click(System.Object,System.EventArgs)">
            <summary>
            Command to start/stop the cineloop
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.StartCineloop">
            <summary>
            to Start the cineloop
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.StopCineloop">
            <summary>
            to stop the cineloop
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.CineloopSlide">
            <summary>
            to display the slide "iCineCounter" of the cineloop, 
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.CinePlay(System.Object)">
            <summary>
            to play the cineloop
            </summary>
            <param name="FrameRateMilliSeconds"> frame Rate of the probe</param>
        </member>
        <member name="M:SDK_Example.formScan2D.NextImage">
            <summary>
            Outside of the thread of the cineloop, to display the next image
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.PreviousImage">
            Outside of the thread of the cineloop, to display the previous image
        </member>
        <member name="M:SDK_Example.formScan2D.buttonNext_Click(System.Object,System.EventArgs)">
            <summary>
            Command to NextImage
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.buttonPrevious_Click(System.Object,System.EventArgs)">
            <summary>
            Command to previous image
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.trackBarCine_Scroll(System.Object,System.EventArgs)">
            <summary>
            To display the image that is pointed by the track bar
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.chkboxUpDown_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.buttonSave_Click(System.Object,System.EventArgs)">
            <summary>
            Command to save image to a file
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.DoSaveScan">
            <summary>
            to get the bmp to be saved
            </summary>
            <returns></returns>
        </member>
        <member name="M:SDK_Example.formScan2D.DoSaveRaw(System.String)">
            <summary>
            Save the raw data: 
            2 files ImageName.raw with the Raw Data, ImageName.dat with the minimum charateristics to retrieve 
            the image: depth, up/down, left/right, size of ScanConverter, (Index of ScanConverter), ProbeID
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.buttonLoad_Click(System.Object,System.EventArgs)">
            <summary>
            Command to load a image from a file
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.DoLoadRaw(System.String)">
            <summary>
            Load the raw data
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.WatchHWButton(IntersonArray.Controls.HWControls,System.EventArgs)">
            <summary>
            To watch the Hardware Button, Event is raised when Button is released
            </summary>
            <param name="HwCtrl"></param>
            <param name="e"></param>
        </member>
        <member name="F:SDK_Example.formScan2D.bTimerConnect">
            <summary>
            Watch the USB connections:
            The timer is disabled when scanning, then enabled when idle.
            The interval of the timer is 500ms
            This example has two buttons to reflect the connections of the USB connectors. 
            The name of each probe is printed inside the button. Push the button to switch probes.
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.EnableConnect">
            <summary>
            To Start watching the USB connections
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DisableConnect">
            <summary>
            To Stop watching the USB connections
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D._deviceRemovedWatcher">
            <summary>
            Another way to check the connections. this is the one used
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.AddDeviceArrivedHandler">
             <summary>
             Add a handler to detect arrival of devices.
             </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.AddDeviceRemovedHandler">
             <summary>
             Add a handler to detect removal of devices.
             </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DeviceAdded(System.Object,System.Management.EventArrivedEventArgs)">
             <summary>
             Called on arrival of any device.
             Calls a routine that searches to see if the desired device is present.
             </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DeviceNotificationsStart">
             <summary>
             Add handlers to detect device arrival and removal.
             </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DeviceNotificationsStop">
             <summary>
             Stop receiving notifications about device arrival and removal
             </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DeviceRemoved(System.Object,System.EventArgs)">
             <summary>
             Called on removal of any device.
             Calls a routine that searches to see if the desired device is still present.
             </summary>
            
        </member>
        <member name="F:SDK_Example.formScan2D.bRobotTimerConnect">
            <summary>
            Watch the comPort motor connections:
            The timer is disabled when the motor is connected.
            The interval of the timer is 500ms
            Modelled after the USB probe watch timer
            A different timer runs when the motor is connected to listen for communications with the motor
            We use two different timers to allow for different time intervals
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.EnableRobotConnectTimer">
            <summary>
            To Start watching the SerialPort connections
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DisableRobotConnectTimer">
            <summary>
            To Stop watching the Serial Port connections
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.bRobotListenerTimer">
            <summary>
            Timer that listens for communications from the motor
            The timer is disabled when the motor is disconnected.
            The interval of the timer is 100ms
            A different timer runs when the motor is disconnected to listen for motor reconnection
            We use two different timers to allow for different time intervals
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.EnableRobotListener">
            <summary>
            To Listen for communications from the robot
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DisableRobotListener">
            <summary>
            To Stop Listening for communications from the robot
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:SDK_Example.formScan2D.baseFileName" -->
        <member name="M:SDK_Example.formScan2D.DoSaveRobotScanDat(System.String)">
            <summary>
            Save the raw  .dat with the minimum charateristics to retrieve 
            the images: depth, up/down, left/right, size of ScanConverter, (Index of ScanConverter), ProbeID
            Essentially copied from DoSaveRaw since I only need one for all the entire 3D scan
            CURRENTLY NOT BEING USED, ONLY SAVE DATA AS TEXT
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DoSaveRobotScanRaw(System.String,System.String,System.String,System.Int32)">
            <summary>
            Save the raw data for one image of the 3D scan: 
            essentially copied from DoSaveRaw but with the .dat part pulled out
            and reads the image from the saved BytArray
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.SaveBmpFromRaw(System.Int32,System.String,System.String)">
            <summary>
             copied from DrawOut to create the bmp from a raw file without changing the graphics
            </summary>
            <param name="slide"></param>
            <param name="fileName"></param>
        </member>
        <member name="F:SDK_Example.formScan2D.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SDK_Example.formScan2D.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SDK_Example.structMessage">
            <summary>
            Format of the message
            </summary>
        </member>
        <member name="T:SDK_Example.MessageClass">
            <summary>
            Represents the list of messages
            </summary>
        </member>
        <member name="M:SDK_Example.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="F:SDK_Example.UserControlDepth.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SDK_Example.UserControlDepth.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SDK_Example.UserControlDepth.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SDK_Example.UserControlGrayScale.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SDK_Example.UserControlGrayScale.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SDK_Example.UserControlGrayScale.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SDK_Example.UserControlPlusMinus.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SDK_Example.UserControlPlusMinus.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SDK_Example.UserControlPlusMinus.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SDK_Example.UserControlScan.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SDK_Example.UserControlScan.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SDK_Example.UserControlScan.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ArraySDK_Example.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ArraySDK_Example.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ArraySDK_Example.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
